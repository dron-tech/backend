x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3200/loki/api/v1/push"
      loki-external-labels: "type=dev,repo=${COMPOSE_PROJECT_NAME},job=docker,container_name={{.Name}}"

services:
  backend:
    <<: *logging
    build:
      context: .
      args:
        - DOTNET_ENVIRONMENT=$DOTNET_ENVIRONMENT
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Context=User ID=${DB_USERNAME}; Password=${DB_PASSWORD}; Host=pg_db; Port=5432; Database=${DB_NAME}; Pooling=true
    depends_on:
      - pg_db
    labels:
      - "custom.label=${COMPOSE_PROJECT_NAME}"
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "io.portainer.accesscontrol.teams=devs,managers"
    volumes:
      - public:/app/wwwroot
    networks:
      - default

  pg_db:
    <<: *logging
    image: postgres:13
    restart: unless-stopped
    labels:
      - "io.portainer.accesscontrol.teams=devs,managers"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      proxy:
        aliases:
          - ${COMPOSE_PROJECT_NAME}
      default:

  traefik:
    <<: *logging
    image: traefik:2.7
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.constraints=Label(`custom.label`,`${COMPOSE_PROJECT_NAME}`)"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${COMPOSE_PROJECT_NAME}"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "io.portainer.accesscontrol.teams=devs,managers"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - default

volumes:
  public:
    labels:
      - "io.portainer.accesscontrol.teams=devs,managers"
  pgdata:
    labels:
      - "io.portainer.accesscontrol.teams=devs,managers"
  letsencrypt:

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}
    ipam:
      driver: default
      config:
        - subnet: 172.56.0.0/24
    labels:
      - "io.portainer.accesscontrol.teams=devs,managers"
  proxy:
    external: true
